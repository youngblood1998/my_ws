// Generated by gencpp from file easy_handeye_msgs/ComputeCalibration.msg
// DO NOT EDIT!


#ifndef EASY_HANDEYE_MSGS_MESSAGE_COMPUTECALIBRATION_H
#define EASY_HANDEYE_MSGS_MESSAGE_COMPUTECALIBRATION_H

#include <ros/service_traits.h>


#include <easy_handeye_msgs/ComputeCalibrationRequest.h>
#include <easy_handeye_msgs/ComputeCalibrationResponse.h>


namespace easy_handeye_msgs
{

struct ComputeCalibration
{

typedef ComputeCalibrationRequest Request;
typedef ComputeCalibrationResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ComputeCalibration
} // namespace easy_handeye_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::easy_handeye_msgs::ComputeCalibration > {
  static const char* value()
  {
    return "6afc2cd822d24a09561ea7009e409ca0";
  }

  static const char* value(const ::easy_handeye_msgs::ComputeCalibration&) { return value(); }
};

template<>
struct DataType< ::easy_handeye_msgs::ComputeCalibration > {
  static const char* value()
  {
    return "easy_handeye_msgs/ComputeCalibration";
  }

  static const char* value(const ::easy_handeye_msgs::ComputeCalibration&) { return value(); }
};


// service_traits::MD5Sum< ::easy_handeye_msgs::ComputeCalibrationRequest> should match 
// service_traits::MD5Sum< ::easy_handeye_msgs::ComputeCalibration > 
template<>
struct MD5Sum< ::easy_handeye_msgs::ComputeCalibrationRequest>
{
  static const char* value()
  {
    return MD5Sum< ::easy_handeye_msgs::ComputeCalibration >::value();
  }
  static const char* value(const ::easy_handeye_msgs::ComputeCalibrationRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::easy_handeye_msgs::ComputeCalibrationRequest> should match 
// service_traits::DataType< ::easy_handeye_msgs::ComputeCalibration > 
template<>
struct DataType< ::easy_handeye_msgs::ComputeCalibrationRequest>
{
  static const char* value()
  {
    return DataType< ::easy_handeye_msgs::ComputeCalibration >::value();
  }
  static const char* value(const ::easy_handeye_msgs::ComputeCalibrationRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::easy_handeye_msgs::ComputeCalibrationResponse> should match 
// service_traits::MD5Sum< ::easy_handeye_msgs::ComputeCalibration > 
template<>
struct MD5Sum< ::easy_handeye_msgs::ComputeCalibrationResponse>
{
  static const char* value()
  {
    return MD5Sum< ::easy_handeye_msgs::ComputeCalibration >::value();
  }
  static const char* value(const ::easy_handeye_msgs::ComputeCalibrationResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::easy_handeye_msgs::ComputeCalibrationResponse> should match 
// service_traits::DataType< ::easy_handeye_msgs::ComputeCalibration > 
template<>
struct DataType< ::easy_handeye_msgs::ComputeCalibrationResponse>
{
  static const char* value()
  {
    return DataType< ::easy_handeye_msgs::ComputeCalibration >::value();
  }
  static const char* value(const ::easy_handeye_msgs::ComputeCalibrationResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // EASY_HANDEYE_MSGS_MESSAGE_COMPUTECALIBRATION_H
